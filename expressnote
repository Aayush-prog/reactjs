express expands http of nodejs basically built upon it

installing and testing
    npm install express

const express=require('express')
const { start } = require('repl')
const { engine } = require('./express/app')
const app=express()
no need to do create server and all that in express

routing in express
    used get method with url and cal back function
    example:
    app.get('/',(req,res)=>{
    render(res,'index.html')
})

express generator
    program that will create express automatically for us
    npx express-generatior --view=templateName
    use --view to use specific template(default jade template)

node monitor
    module to monitor any changes
    npm install -g nodemon
    now just use nodemon instead of npm start

restructing express app
    mvc(model view controller)
    model=datafile
    view=layout
    controller=rendering (handling the request)

template engine
    process to output tokenized variables to another format(HTML,XML)
    uses template language to process data
    example jade(default replace with pug),ejs,handlebars

middleware functions
    application level, router level, built in, third party and error handling
    callback functions that act on http methods
    has req, res and next
    if doesnot end the req or res cycle must call next

Appplication level
    function bound to instance of app object (app.get,app.put)

Router level
    like applicaiton level and bound to router (express.Router)
    used for code restructuring

Err handling
    same like other but has 4 parameters error, req,res and next

Express.js is a node module. The Express.js Framework is an open-source Node.js web application framework. Other frameworks are built on the Express framework, such as Loopback,Sails,NestJS,andFeathers.
The Express.js sits on top of the Node.js HTTP Server. It expands the HTTP Module to provide business logic.
The two methods of installing Express.js are using: npm and yarn.
The two ways for creating a Node.js Express App include: using express-generator and set a specific template.
The template engines available for Node.js are Jade, EJS, Handlebars, and Mustache. The syntax of handlebars is similar to the syntax of Angular's template language syntax.
The Model View Controller supports rapid and parallel development.

.post metod to send data
day13
damn not reading today

REST API
    Representational State Transfer
    rules how a system transfers data over the web
    uses URL(endpoints), HTTPS, and JSON format
    scalability, performance, cacheable data, and flexibility
    complete control of data
    shut down instantly in case of data breach

CRUD=POST,GET,PUT,DELETE

API testing
    for security and reliability
    tools:katalon, soapui,postman,curl

Refactoring API
    validating input
    error handling
    sending status codes

The types of Middleware functions: Application-level, Router-level, Error handling, Built-in and Third-party. The router-level middleware is best suited for code restructuring.
API is the plug-in interface of a modem or system.
REST API is a set of rules of how systems can transfer data over the web. In order for the data to be transferred, they must be serialized into text using the JSON data format.
It is important to test APIs for security and reliability.
Postman and SoapUI are one of the testing tools of API.
CRUD operations can be performed with Rest APIs. 